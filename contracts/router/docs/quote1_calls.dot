digraph {
    compound = true;
    
    sdk [label = "SDK";];
    router [label = "Destination Chain\nRouterV2";shape = rect;];
    findConnectedTokens [label = <<I>3. findConnectedTokens<br></br>(bridgeTokens, tokenOut)</I>>;shape = none;];
    quoter [label = "QuoterV2";shape = rect;];
    
    rankdir = "LR";
    sdk -> router [label = <<I>1. getConnectedBridgeTokens<br></br>(tokenOut)</I>>;];
    
    subgraph cluster1 {
        node [shape = rect; style = dashed;];
        module1 [label = "Bridge Module (Synapse Bridge)";];
        module2 [label = "Bridge Module (Synapse CCTP)";];
        module3 [label = "Bridge Module (Synapse <...>)";];
    }
    
    subgraph {
        rank = same;
        router -> findConnectedTokens [dir = none;];
        findConnectedTokens -> quoter;
    }
    
    router -> module1 [label = <<I>2a. getBridgeTokens()</I>>; lhead = cluster1; weight = 10;];
    router:se -> module2:w [label = <<I>2b. getBridgeActionMask<br></br>(bridgeToken)</I>>; lhead = cluster1;];
}